{"ast":null,"code":"import _toConsumableArray from \"C:/Users/marce/Documents/Projeto Garcia/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/Users/marce/Documents/Projeto Garcia/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { Bar, Pie } from 'vue-chartjs';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport { useFinances } from '@/store/finances';\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement);\nexport default {\n  name: 'FinancialView',\n  components: {\n    Bar: Bar,\n    Pie: Pie\n  },\n  setup: function setup() {\n    var _useFinances = useFinances(),\n      totalTithes = _useFinances.totalTithes,\n      totalOfferings = _useFinances.totalOfferings;\n    var expenses = ref([]);\n    var expenseForm = ref({\n      description: '',\n      category: 'utilities',\n      value: '',\n      date: new Date().toISOString().split('T')[0]\n    });\n\n    // Cálculos financeiros\n    var totalIncome = computed(function () {\n      return totalTithes.value + totalOfferings.value;\n    });\n    var totalExpenses = computed(function () {\n      return expenses.value.reduce(function (sum, expense) {\n        return sum + Number(expense.value);\n      }, 0);\n    });\n    var balance = computed(function () {\n      return totalIncome.value - totalExpenses.value;\n    });\n\n    // Dados para os gráficos\n    var barChartData = computed(function () {\n      return {\n        labels: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun'],\n        datasets: [{\n          label: 'Entradas',\n          backgroundColor: '#2ecc71',\n          data: [totalIncome.value]\n        }, {\n          label: 'Saídas',\n          backgroundColor: '#e74c3c',\n          data: [totalExpenses.value]\n        }]\n      };\n    });\n    var pieChartData = computed(function () {\n      return {\n        labels: ['Dízimos', 'Ofertas'],\n        datasets: [{\n          backgroundColor: ['#3498db', '#2ecc71'],\n          data: [totalTithes.value, totalOfferings.value]\n        }]\n      };\n    });\n    var barChartOptions = {\n      responsive: true,\n      maintainAspectRatio: false\n    };\n    var pieChartOptions = {\n      responsive: true,\n      maintainAspectRatio: false\n    };\n\n    // Manipulação de despesas\n    var handleExpenseSubmit = function handleExpenseSubmit() {\n      expenses.value.push(_objectSpread({\n        id: Date.now(),\n        type: 'expense'\n      }, expenseForm.value));\n      expenseForm.value = {\n        description: '',\n        category: 'utilities',\n        value: '',\n        date: new Date().toISOString().split('T')[0]\n      };\n    };\n\n    // Lista combinada de transações\n    var sortedTransactions = computed(function () {\n      var allTransactions = _toConsumableArray(expenses.value.map(function (expense) {\n        return _objectSpread(_objectSpread({}, expense), {}, {\n          type: 'expense'\n        });\n      }));\n      return allTransactions.sort(function (a, b) {\n        return new Date(b.date) - new Date(a.date);\n      });\n    });\n\n    // Formatadores\n    var formatValue = function formatValue(value) {\n      return Number(value).toLocaleString('pt-BR', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      });\n    };\n    var formatDate = function formatDate(dateString) {\n      return new Date(dateString).toLocaleDateString('pt-BR');\n    };\n    var formatCategory = function formatCategory(category) {\n      var categories = {\n        utilities: 'Utilidades',\n        maintenance: 'Manutenção',\n        supplies: 'Materiais',\n        events: 'Eventos',\n        others: 'Outros'\n      };\n      return categories[category] || category;\n    };\n    return {\n      expenseForm: expenseForm,\n      expenses: expenses,\n      totalIncome: totalIncome,\n      totalExpenses: totalExpenses,\n      balance: balance,\n      barChartData: barChartData,\n      barChartOptions: barChartOptions,\n      pieChartData: pieChartData,\n      pieChartOptions: pieChartOptions,\n      sortedTransactions: sortedTransactions,\n      handleExpenseSubmit: handleExpenseSubmit,\n      formatValue: formatValue,\n      formatDate: formatDate,\n      formatCategory: formatCategory\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","Bar","Pie","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","ArcElement","useFinances","register","name","components","setup","_useFinances","totalTithes","totalOfferings","expenses","expenseForm","description","category","value","date","Date","toISOString","split","totalIncome","totalExpenses","reduce","sum","expense","Number","balance","barChartData","labels","datasets","label","backgroundColor","data","pieChartData","barChartOptions","responsive","maintainAspectRatio","pieChartOptions","handleExpenseSubmit","push","_objectSpread","id","now","type","sortedTransactions","allTransactions","_toConsumableArray","map","sort","a","b","formatValue","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatDate","dateString","toLocaleDateString","formatCategory","categories","utilities","maintenance","supplies","events","others"],"sources":["C:\\Users\\marce\\Documents\\Projeto Garcia\\src\\views\\FinancialView.vue"],"sourcesContent":["<template>\r\n  <div class=\"financial-container\">\r\n    <h1>Controle Financeiro</h1>\r\n\r\n    <!-- Cartões de Resumo -->\r\n    <div class=\"summary-cards\">\r\n      <div class=\"summary-card income\">\r\n        <h3>Total de Entradas</h3>\r\n        <p class=\"amount\">R$ {{ formatValue(totalIncome) }}</p>\r\n      </div>\r\n      <div class=\"summary-card expense\">\r\n        <h3>Total de Saídas</h3>\r\n        <p class=\"amount\">R$ {{ formatValue(totalExpenses) }}</p>\r\n      </div>\r\n      <div class=\"summary-card balance\">\r\n        <h3>Saldo</h3>\r\n        <p class=\"amount\">R$ {{ formatValue(balance) }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Gráficos -->\r\n    <div class=\"charts-container\">\r\n      <div class=\"chart-section\">\r\n        <h2>Entradas vs Saídas</h2>\r\n        <Bar :data=\"barChartData\" :options=\"barChartOptions\" />\r\n      </div>\r\n      <div class=\"chart-section\">\r\n        <h2>Distribuição de Entradas</h2>\r\n        <Pie :data=\"pieChartData\" :options=\"pieChartOptions\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Registro de Despesas -->\r\n    <div class=\"expense-section\">\r\n      <h2>Registrar Despesa</h2>\r\n      <form @submit.prevent=\"handleExpenseSubmit\" class=\"expense-form\">\r\n        <div class=\"form-row\">\r\n          <div class=\"form-group\">\r\n            <label>Descrição</label>\r\n            <input \r\n              type=\"text\" \r\n              v-model=\"expenseForm.description\" \r\n              required \r\n              placeholder=\"Descrição da despesa\"\r\n            >\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Categoria</label>\r\n            <select v-model=\"expenseForm.category\" required>\r\n              <option value=\"utilities\">Utilidades</option>\r\n              <option value=\"maintenance\">Manutenção</option>\r\n              <option value=\"supplies\">Materiais</option>\r\n              <option value=\"events\">Eventos</option>\r\n              <option value=\"others\">Outros</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-row\">\r\n          <div class=\"form-group\">\r\n            <label>Valor</label>\r\n            <input \r\n              type=\"number\" \r\n              v-model=\"expenseForm.value\" \r\n              required \r\n              step=\"0.01\"\r\n              min=\"0\"\r\n              placeholder=\"R$ 0,00\"\r\n            >\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Data</label>\r\n            <input \r\n              type=\"date\" \r\n              v-model=\"expenseForm.date\" \r\n              required\r\n            >\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" class=\"submit-button\">Registrar Despesa</button>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- Tabela de Transações -->\r\n    <div class=\"transactions-section\">\r\n      <h2>Histórico de Transações</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Data</th>\r\n            <th>Descrição</th>\r\n            <th>Categoria</th>\r\n            <th>Tipo</th>\r\n            <th>Valor</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"transaction in sortedTransactions\" :key=\"transaction.id\"\r\n              :class=\"{ 'income-row': transaction.type === 'income', 'expense-row': transaction.type === 'expense' }\">\r\n            <td>{{ formatDate(transaction.date) }}</td>\r\n            <td>{{ transaction.description }}</td>\r\n            <td>{{ formatCategory(transaction.category) }}</td>\r\n            <td>{{ transaction.type === 'income' ? 'Entrada' : 'Saída' }}</td>\r\n            <td>R$ {{ formatValue(transaction.value) }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { Bar, Pie } from 'vue-chartjs'\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement } from 'chart.js'\r\nimport { useFinances } from '@/store/finances'\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement)\r\n\r\nexport default {\r\n  name: 'FinancialView',\r\n  components: { Bar, Pie },\r\n  setup() {\r\n    const { totalTithes, totalOfferings } = useFinances()\r\n    const expenses = ref([])\r\n    const expenseForm = ref({\r\n      description: '',\r\n      category: 'utilities',\r\n      value: '',\r\n      date: new Date().toISOString().split('T')[0]\r\n    })\r\n\r\n    // Cálculos financeiros\r\n    const totalIncome = computed(() => totalTithes.value + totalOfferings.value)\r\n    const totalExpenses = computed(() => \r\n      expenses.value.reduce((sum, expense) => sum + Number(expense.value), 0)\r\n    )\r\n    const balance = computed(() => totalIncome.value - totalExpenses.value)\r\n\r\n    // Dados para os gráficos\r\n    const barChartData = computed(() => ({\r\n      labels: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun'],\r\n      datasets: [\r\n        {\r\n          label: 'Entradas',\r\n          backgroundColor: '#2ecc71',\r\n          data: [totalIncome.value]\r\n        },\r\n        {\r\n          label: 'Saídas',\r\n          backgroundColor: '#e74c3c',\r\n          data: [totalExpenses.value]\r\n        }\r\n      ]\r\n    }))\r\n\r\n    const pieChartData = computed(() => ({\r\n      labels: ['Dízimos', 'Ofertas'],\r\n      datasets: [{\r\n        backgroundColor: ['#3498db', '#2ecc71'],\r\n        data: [totalTithes.value, totalOfferings.value]\r\n      }]\r\n    }))\r\n\r\n    const barChartOptions = {\r\n      responsive: true,\r\n      maintainAspectRatio: false\r\n    }\r\n\r\n    const pieChartOptions = {\r\n      responsive: true,\r\n      maintainAspectRatio: false\r\n    }\r\n\r\n    // Manipulação de despesas\r\n    const handleExpenseSubmit = () => {\r\n      expenses.value.push({\r\n        id: Date.now(),\r\n        type: 'expense',\r\n        ...expenseForm.value\r\n      })\r\n\r\n      expenseForm.value = {\r\n        description: '',\r\n        category: 'utilities',\r\n        value: '',\r\n        date: new Date().toISOString().split('T')[0]\r\n      }\r\n    }\r\n\r\n    // Lista combinada de transações\r\n    const sortedTransactions = computed(() => {\r\n      const allTransactions = [\r\n        ...expenses.value.map(expense => ({\r\n          ...expense,\r\n          type: 'expense'\r\n        }))\r\n      ]\r\n      return allTransactions.sort((a, b) => new Date(b.date) - new Date(a.date))\r\n    })\r\n\r\n    // Formatadores\r\n    const formatValue = (value) => {\r\n      return Number(value).toLocaleString('pt-BR', {\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2\r\n      })\r\n    }\r\n\r\n    const formatDate = (dateString) => {\r\n      return new Date(dateString).toLocaleDateString('pt-BR')\r\n    }\r\n\r\n    const formatCategory = (category) => {\r\n      const categories = {\r\n        utilities: 'Utilidades',\r\n        maintenance: 'Manutenção',\r\n        supplies: 'Materiais',\r\n        events: 'Eventos',\r\n        others: 'Outros'\r\n      }\r\n      return categories[category] || category\r\n    }\r\n\r\n    return {\r\n      expenseForm,\r\n      expenses,\r\n      totalIncome,\r\n      totalExpenses,\r\n      balance,\r\n      barChartData,\r\n      barChartOptions,\r\n      pieChartData,\r\n      pieChartOptions,\r\n      sortedTransactions,\r\n      handleExpenseSubmit,\r\n      formatValue,\r\n      formatDate,\r\n      formatCategory\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.financial-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n\r\n  h1, h2 {\r\n    color: #2c3e50;\r\n    margin-bottom: 20px;\r\n  }\r\n}\r\n\r\n.summary-cards {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.summary-card {\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  color: white;\r\n  text-align: center;\r\n\r\n  &.income { background-color: #2ecc71; }\r\n  &.expense { background-color: #e74c3c; }\r\n  &.balance { background-color: #3498db; }\r\n\r\n  h3 {\r\n    margin-bottom: 10px;\r\n    font-size: 1.1em;\r\n  }\r\n\r\n  .amount {\r\n    font-size: 1.8em;\r\n    font-weight: bold;\r\n  }\r\n}\r\n\r\n.charts-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.chart-section {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  height: 400px;\r\n}\r\n\r\n.expense-section {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.form-row {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group {\r\n  label {\r\n    display: block;\r\n    margin-bottom: 8px;\r\n    color: #2c3e50;\r\n    font-weight: 500;\r\n  }\r\n\r\n  input, select {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n\r\n    &:focus {\r\n      outline: none;\r\n      border-color: #3498db;\r\n    }\r\n  }\r\n}\r\n\r\n.submit-button {\r\n  width: 100%;\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  padding: 12px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n\r\n  &:hover {\r\n    background-color: var(--secondary-color);\r\n  }\r\n}\r\n\r\n.transactions-section {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n\r\n    th, td {\r\n      padding: 12px;\r\n      text-align: left;\r\n      border-bottom: 1px solid #ddd;\r\n    }\r\n\r\n    th {\r\n      background-color: #f8f9fa;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n}\r\n\r\n.income-row td { color: #2ecc71; }\r\n.expense-row td { color: #e74c3c; }\r\n\r\n@media (max-width: 768px) {\r\n  .form-row {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .charts-container {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}