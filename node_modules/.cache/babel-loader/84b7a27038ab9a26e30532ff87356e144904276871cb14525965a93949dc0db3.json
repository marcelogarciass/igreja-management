{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/marce/Documents/Projeto Garcia/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/marce/Documents/Projeto Garcia/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Users/marce/Documents/Projeto Garcia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { defineStore } from 'pinia';\nimport { db } from '@/firebase/config';\nimport { collection, getDocs, query, orderBy } from 'firebase/firestore';\nexport var useFinanceStore = defineStore('finance', {\n  state: function state() {\n    return {\n      tithes: [],\n      offerings: [],\n      totalTithes: 0,\n      totalOfferings: 0\n    };\n  },\n  getters: {\n    totalIncome: function totalIncome(state) {\n      return state.totalTithes + state.totalOfferings;\n    },\n    monthlyTithes: function monthlyTithes(state) {\n      var currentMonth = new Date().getMonth();\n      return state.tithes.filter(function (tithe) {\n        return new Date(tithe.date).getMonth() === currentMonth;\n      }).reduce(function (sum, tithe) {\n        return sum + tithe.value;\n      }, 0);\n    },\n    monthlyOfferings: function monthlyOfferings(state) {\n      var currentMonth = new Date().getMonth();\n      return state.offerings.filter(function (offering) {\n        return new Date(offering.date).getMonth() === currentMonth;\n      }).reduce(function (sum, offering) {\n        return sum + offering.value;\n      }, 0);\n    }\n  },\n  actions: {\n    fetchAllTransactions: function fetchAllTransactions() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var q, querySnapshot;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              q = query(collection(db, 'tithes'), orderBy('date', 'desc'));\n              _context.next = 4;\n              return getDocs(q);\n            case 4:\n              querySnapshot = _context.sent;\n              _this.tithes = [];\n              _this.offerings = [];\n              querySnapshot.forEach(function (doc) {\n                var data = _objectSpread({\n                  id: doc.id\n                }, doc.data());\n                if (data.type === 'tithe') {\n                  _this.tithes.push(data);\n                } else {\n                  _this.offerings.push(data);\n                }\n              });\n              _this.calculateTotals();\n              _context.next = 14;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Erro ao carregar transações:', _context.t0);\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 11]]);\n      }))();\n    },\n    calculateTotals: function calculateTotals() {\n      this.totalTithes = this.tithes.reduce(function (sum, tithe) {\n        return sum + tithe.value;\n      }, 0);\n      this.totalOfferings = this.offerings.reduce(function (sum, offering) {\n        return sum + offering.value;\n      }, 0);\n    },\n    addTransaction: function addTransaction(transaction) {\n      if (transaction.type === 'tithe') {\n        this.tithes.push(transaction);\n      } else {\n        this.offerings.push(transaction);\n      }\n      this.calculateTotals();\n    }\n  }\n});","map":{"version":3,"names":["defineStore","db","collection","getDocs","query","orderBy","useFinanceStore","state","tithes","offerings","totalTithes","totalOfferings","getters","totalIncome","monthlyTithes","currentMonth","Date","getMonth","filter","tithe","date","reduce","sum","value","monthlyOfferings","offering","actions","fetchAllTransactions","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","q","querySnapshot","wrap","_callee$","_context","prev","next","sent","forEach","doc","data","_objectSpread","id","type","push","calculateTotals","t0","console","error","stop","addTransaction","transaction"],"sources":["C:/Users/marce/Documents/Projeto Garcia/src/stores/financeStore.js"],"sourcesContent":["import { defineStore } from 'pinia'\r\nimport { db } from '@/firebase/config'\r\nimport { collection, getDocs, query, orderBy } from 'firebase/firestore'\r\n\r\nexport const useFinanceStore = defineStore('finance', {\r\n  state: () => ({\r\n    tithes: [],\r\n    offerings: [],\r\n    totalTithes: 0,\r\n    totalOfferings: 0\r\n  }),\r\n  \r\n  getters: {\r\n    totalIncome: (state) => state.totalTithes + state.totalOfferings,\r\n    monthlyTithes: (state) => {\r\n      const currentMonth = new Date().getMonth()\r\n      return state.tithes.filter(tithe => \r\n        new Date(tithe.date).getMonth() === currentMonth\r\n      ).reduce((sum, tithe) => sum + tithe.value, 0)\r\n    },\r\n    monthlyOfferings: (state) => {\r\n      const currentMonth = new Date().getMonth()\r\n      return state.offerings.filter(offering => \r\n        new Date(offering.date).getMonth() === currentMonth\r\n      ).reduce((sum, offering) => sum + offering.value, 0)\r\n    }\r\n  },\r\n  \r\n  actions: {\r\n    async fetchAllTransactions() {\r\n      try {\r\n        const q = query(collection(db, 'tithes'), orderBy('date', 'desc'))\r\n        const querySnapshot = await getDocs(q)\r\n        \r\n        this.tithes = []\r\n        this.offerings = []\r\n        \r\n        querySnapshot.forEach((doc) => {\r\n          const data = { id: doc.id, ...doc.data() }\r\n          if (data.type === 'tithe') {\r\n            this.tithes.push(data)\r\n          } else {\r\n            this.offerings.push(data)\r\n          }\r\n        })\r\n        \r\n        this.calculateTotals()\r\n      } catch (error) {\r\n        console.error('Erro ao carregar transações:', error)\r\n      }\r\n    },\r\n    \r\n    calculateTotals() {\r\n      this.totalTithes = this.tithes.reduce((sum, tithe) => sum + tithe.value, 0)\r\n      this.totalOfferings = this.offerings.reduce((sum, offering) => sum + offering.value, 0)\r\n    },\r\n    \r\n    addTransaction(transaction) {\r\n      if (transaction.type === 'tithe') {\r\n        this.tithes.push(transaction)\r\n      } else {\r\n        this.offerings.push(transaction)\r\n      }\r\n      this.calculateTotals()\r\n    }\r\n  }\r\n})"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}